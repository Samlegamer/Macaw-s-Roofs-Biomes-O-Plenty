package fr.samlegamer.macawsroofsbop.block;

import com.google.common.base.Supplier;
import com.mcwroofs.kikoz.MacawsRoofs;
import com.mcwroofs.kikoz.objects.multiblocks.LowerRoof;
import com.mcwroofs.kikoz.objects.multiblocks.RoofSteep;
import com.mcwroofs.kikoz.objects.roofs.AwningBlock;
import com.mcwroofs.kikoz.objects.roofs.RoofBlock;
import com.mcwroofs.kikoz.objects.roofs.RoofGlass;
import com.mcwroofs.kikoz.objects.roofs.RoofTopX;
import com.mcwroofs.kikoz.objects.roofs.Roof_Normal;

import fr.samlegamer.macawsroofsbop.MacawsRoofsBOP;
import fr.samlegamer.macawsroofsbop.item.MRBOPItemsRegistry;
import net.minecraft.block.AbstractBlock;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraftforge.common.ToolType;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

public class MRBOPBlocksRegistry
{
	public static final DeferredRegister<Block> BLOCKS_REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, MacawsRoofsBOP.MODID);
	
	//Attic Roof
    public static final RegistryObject<Block> cherry_attic_roof = createBlock("cherry_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_planks_attic_roof = createBlock("cherry_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_attic_roof = createBlock("dead_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_attic_roof = createBlock("dead_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_attic_roof = createBlock("fir_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_attic_roof = createBlock("fir_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_attic_roof = createBlock("hellbark_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_attic_roof = createBlock("hellbark_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_attic_roof = createBlock("jacaranda_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_attic_roof = createBlock("jacaranda_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_attic_roof = createBlock("magic_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_attic_roof = createBlock("magic_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_attic_roof = createBlock("mahogany_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_attic_roof = createBlock("mahogany_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_attic_roof = createBlock("palm_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_attic_roof = createBlock("palm_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_attic_roof = createBlock("redwood_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_attic_roof = createBlock("redwood_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_attic_roof = createBlock("umbran_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_attic_roof = createBlock("umbran_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_attic_roof = createBlock("willow_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_attic_roof = createBlock("willow_planks_attic_roof", () -> new RoofGlass(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    
    //Cube Roof
    public static final RegistryObject<Block> cherry_cube_roof = createBlock("cherry_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_planks_cube_roof = createBlock("cherry_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_cube_roof = createBlock("dead_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_cube_roof = createBlock("dead_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_cube_roof = createBlock("fir_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_cube_roof = createBlock("fir_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_cube_roof = createBlock("hellbark_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_cube_roof = createBlock("hellbark_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_cube_roof = createBlock("jacaranda_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_cube_roof = createBlock("jacaranda_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_cube_roof = createBlock("magic_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_cube_roof = createBlock("magic_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_cube_roof = createBlock("mahogany_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_cube_roof = createBlock("mahogany_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_cube_roof = createBlock("palm_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_cube_roof = createBlock("palm_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_cube_roof = createBlock("redwood_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_cube_roof = createBlock("redwood_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_cube_roof = createBlock("umbran_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_cube_roof = createBlock("umbran_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_cube_roof = createBlock("willow_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_cube_roof = createBlock("willow_planks_cube_roof", () -> new RoofBlock(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    
    //Four Way Roof
    public static final RegistryObject<Block> cherry_four_way_roof = createBlock("cherry_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_planks_four_way_roof = createBlock("cherry_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_four_way_roof = createBlock("dead_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_four_way_roof = createBlock("dead_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_four_way_roof = createBlock("fir_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_four_way_roof = createBlock("fir_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_four_way_roof = createBlock("hellbark_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_four_way_roof = createBlock("hellbark_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_four_way_roof = createBlock("jacaranda_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_four_way_roof = createBlock("jacaranda_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_four_way_roof = createBlock("magic_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_four_way_roof = createBlock("magic_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_four_way_roof = createBlock("mahogany_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_four_way_roof = createBlock("mahogany_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_four_way_roof = createBlock("palm_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_four_way_roof = createBlock("palm_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_four_way_roof = createBlock("redwood_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_four_way_roof = createBlock("redwood_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_four_way_roof = createBlock("umbran_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_four_way_roof = createBlock("umbran_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_four_way_roof = createBlock("willow_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_four_way_roof = createBlock("willow_planks_four_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
        
    //Lower Roof
    public static final RegistryObject<Block> cherry_lower_roof = createBlock("cherry_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_planks_lower_roof = createBlock("cherry_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_lower_roof = createBlock("dead_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_lower_roof = createBlock("dead_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_lower_roof = createBlock("fir_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_lower_roof = createBlock("fir_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_lower_roof = createBlock("hellbark_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_lower_roof = createBlock("hellbark_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_lower_roof = createBlock("jacaranda_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_lower_roof = createBlock("jacaranda_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_lower_roof = createBlock("magic_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_lower_roof = createBlock("magic_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_lower_roof = createBlock("mahogany_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_lower_roof = createBlock("mahogany_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_lower_roof = createBlock("palm_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_lower_roof = createBlock("palm_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_lower_roof = createBlock("redwood_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_lower_roof = createBlock("redwood_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_lower_roof = createBlock("umbran_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_lower_roof = createBlock("umbran_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_lower_roof = createBlock("willow_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_lower_roof = createBlock("willow_planks_lower_roof", () -> new LowerRoof(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));

    //Roof
    public static final RegistryObject<Block> cherry_roof = createBlock("cherry_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_planks_roof = createBlock("cherry_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState() ,AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_roof = createBlock("dead_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_roof = createBlock("dead_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_roof = createBlock("fir_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_roof = createBlock("fir_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_roof = createBlock("hellbark_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_roof = createBlock("hellbark_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_roof = createBlock("jacaranda_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_roof = createBlock("jacaranda_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_roof = createBlock("magic_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_roof = createBlock("magic_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_roof = createBlock("mahogany_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_roof = createBlock("mahogany_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_roof = createBlock("palm_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_roof = createBlock("palm_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_roof = createBlock("redwood_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_roof = createBlock("redwood_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_roof = createBlock("umbran_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_roof = createBlock("umbran_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_roof = createBlock("willow_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_roof = createBlock("willow_planks_roof", () -> new Roof_Normal(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    
    //Steep Roof
    public static final RegistryObject<Block> cherry_planks_steep_roof = createBlock("cherry_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_steep_roof = createBlock("cherry_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState() ,AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_steep_roof = createBlock("dead_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_steep_roof = createBlock("dead_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_steep_roof = createBlock("fir_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_steep_roof = createBlock("fir_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_steep_roof = createBlock("hellbark_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_steep_roof = createBlock("hellbark_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_steep_roof = createBlock("jacaranda_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_steep_roof = createBlock("jacaranda_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_steep_roof = createBlock("magic_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_steep_roof = createBlock("magic_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_steep_roof = createBlock("mahogany_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_steep_roof = createBlock("mahogany_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_steep_roof = createBlock("palm_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_steep_roof = createBlock("palm_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_steep_roof = createBlock("redwood_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_steep_roof = createBlock("redwood_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_steep_roof = createBlock("umbran_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_steep_roof = createBlock("umbran_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_steep_roof = createBlock("willow_planks_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_steep_roof = createBlock("willow_steep_roof", () -> new RoofSteep(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    
    //Three Way Roof
    public static final RegistryObject<Block> cherry_planks_three_way_roof = createBlock("cherry_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_three_way_roof = createBlock("cherry_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_three_way_roof = createBlock("dead_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_three_way_roof = createBlock("dead_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_three_way_roof = createBlock("fir_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_three_way_roof = createBlock("fir_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_three_way_roof = createBlock("hellbark_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_three_way_roof = createBlock("hellbark_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_three_way_roof = createBlock("jacaranda_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_three_way_roof = createBlock("jacaranda_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_three_way_roof = createBlock("magic_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_three_way_roof = createBlock("magic_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_three_way_roof = createBlock("mahogany_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_three_way_roof = createBlock("mahogany_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_three_way_roof = createBlock("palm_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_three_way_roof = createBlock("palm_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_three_way_roof = createBlock("redwood_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_three_way_roof = createBlock("redwood_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_three_way_roof = createBlock("umbran_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_three_way_roof = createBlock("umbran_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_three_way_roof = createBlock("willow_planks_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_three_way_roof = createBlock("willow_three_way_roof", () -> new RoofTopX(AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));

    //Top Roof
    public static final RegistryObject<Block> cherry_planks_top_roof = createBlock("cherry_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> cherry_top_roof = createBlock("cherry_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState() ,AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_planks_top_roof = createBlock("dead_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> dead_top_roof = createBlock("dead_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_planks_top_roof = createBlock("fir_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> fir_top_roof = createBlock("fir_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_planks_top_roof = createBlock("hellbark_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> hellbark_top_roof = createBlock("hellbark_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_planks_top_roof = createBlock("jacaranda_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> jacaranda_top_roof = createBlock("jacaranda_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_planks_top_roof = createBlock("magic_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> magic_top_roof = createBlock("magic_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_planks_top_roof = createBlock("mahogany_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> mahogany_top_roof = createBlock("mahogany_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_planks_top_roof = createBlock("palm_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> palm_top_roof = createBlock("palm_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_planks_top_roof = createBlock("redwood_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> redwood_top_roof = createBlock("redwood_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_planks_top_roof = createBlock("umbran_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> umbran_top_roof = createBlock("umbran_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_planks_top_roof = createBlock("willow_planks_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> willow_top_roof = createBlock("willow_top_roof", () -> new AwningBlock(Blocks.OAK_PLANKS.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).harvestTool(ToolType.AXE).strength(2.0F, 2.0F).sound(SoundType.WOOD)));
    
    public static RegistryObject<Block> createBlock(String name, Supplier<? extends Block> supplier)
    {
        RegistryObject<Block> block = BLOCKS_REGISTRY.register(name, supplier);
        MRBOPItemsRegistry.ITEMS_REGISTRY.register(name, () -> new BlockItem(block.get(), new Item.Properties().tab(MacawsRoofs.roofs)));
        return block;
    }
}